{"version":3,"sources":["../../../../server/api/thing/index.spec.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,YAAR,EAAsB,eAAtB,EAAjB;;AAEA,IAAI,gBAAgB;AAClB,SAAO,iBADW;AAElB,QAAM,gBAFY;AAGlB,UAAQ,kBAHU;AAIlB,UAAQ,kBAJU;AAKlB,WAAS;AALS,CAApB;;AAQA,IAAI,aAAa;AACf,OAAK,MAAM,GAAN,EADU;AAEf,OAAK,MAAM,GAAN,EAFU;AAGf,SAAO,MAAM,GAAN,EAHQ;AAIf,QAAM,MAAM,GAAN,EAJS;AAKf,UAAQ,MAAM,GAAN;AALO,CAAjB;;;AASA,IAAI,aAAa,WAAW,YAAX,EAAyB;AACxC,aAAW;AACT,YAAQ,kBAAW;AACjB,aAAO,UAAP;AACD;AAHQ,GAD6B;AAMxC,wBAAsB;AANkB,CAAzB,CAAjB;;AASA,SAAS,mBAAT,EAA8B,YAAW;;AAEvC,KAAG,0CAAH,EAA+C,YAAW;AACxD,WAAO,UAAP,EAAmB,EAAnB,CAAsB,KAAtB,CAA4B,UAA5B;AACD,GAFD;;AAIA,WAAS,iBAAT,EAA4B,YAAW;;AAErC,OAAG,wCAAH,EAA6C,YAAW;AACtD,aAAO,WAAW,GAAX,CACJ,QADI,CACK,GADL,EACU,iBADV,CAAP,EAEI,EAFJ,CAEO,IAFP,CAEY,IAFZ,CAEiB,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,qBAAT,EAAgC,YAAW;;AAEzC,OAAG,uCAAH,EAA4C,YAAW;AACrD,aAAO,WAAW,GAAX,CACJ,QADI,CACK,MADL,EACa,gBADb,CAAP,EAEI,EAFJ,CAEO,IAFP,CAEY,IAFZ,CAEiB,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,kBAAT,EAA6B,YAAW;;AAEtC,OAAG,yCAAH,EAA8C,YAAW;AACvD,aAAO,WAAW,IAAX,CACJ,QADI,CACK,GADL,EACU,kBADV,CAAP,EAEI,EAFJ,CAEO,IAFP,CAEY,IAFZ,CAEiB,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,qBAAT,EAAgC,YAAW;;AAEzC,OAAG,yCAAH,EAA8C,YAAW;AACvD,aAAO,WAAW,GAAX,CACJ,QADI,CACK,MADL,EACa,kBADb,CAAP,EAEI,EAFJ,CAEO,IAFP,CAEY,IAFZ,CAEiB,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,uBAAT,EAAkC,YAAW;;AAE3C,OAAG,yCAAH,EAA8C,YAAW;AACvD,aAAO,WAAW,KAAX,CACJ,QADI,CACK,MADL,EACa,kBADb,CAAP,EAEI,EAFJ,CAEO,IAFP,CAEY,IAFZ,CAEiB,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,wBAAT,EAAmC,YAAW;;AAE5C,OAAG,0CAAH,EAA+C,YAAW;AACxD,aAAO,WAAW,MAAX,CACJ,QADI,CACK,MADL,EACa,mBADb,CAAP,EAEI,EAFJ,CAEO,IAFP,CAEY,IAFZ,CAEiB,UAFjB;AAGD,KAJD;AAMD,GARD;AAUD,CAlED","file":"index.spec.js","sourcesContent":["'use strict';\r\n\r\nvar proxyquire = require('proxyquire').noPreserveCache();\r\n\r\nvar thingCtrlStub = {\r\n  index: 'thingCtrl.index',\r\n  show: 'thingCtrl.show',\r\n  create: 'thingCtrl.create',\r\n  update: 'thingCtrl.update',\r\n  destroy: 'thingCtrl.destroy'\r\n};\r\n\r\nvar routerStub = {\r\n  get: sinon.spy(),\r\n  put: sinon.spy(),\r\n  patch: sinon.spy(),\r\n  post: sinon.spy(),\r\n  delete: sinon.spy()\r\n};\r\n\r\n// require the index with our stubbed out modules\r\nvar thingIndex = proxyquire('./index.js', {\r\n  'express': {\r\n    Router: function() {\r\n      return routerStub;\r\n    }\r\n  },\r\n  './thing.controller': thingCtrlStub\r\n});\r\n\r\ndescribe('Thing API Router:', function() {\r\n\r\n  it('should return an express router instance', function() {\r\n    expect(thingIndex).to.equal(routerStub);\r\n  });\r\n\r\n  describe('GET /api/things', function() {\r\n\r\n    it('should route to thing.controller.index', function() {\r\n      expect(routerStub.get\r\n        .withArgs('/', 'thingCtrl.index')\r\n        ).to.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('GET /api/things/:id', function() {\r\n\r\n    it('should route to thing.controller.show', function() {\r\n      expect(routerStub.get\r\n        .withArgs('/:id', 'thingCtrl.show')\r\n        ).to.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('POST /api/things', function() {\r\n\r\n    it('should route to thing.controller.create', function() {\r\n      expect(routerStub.post\r\n        .withArgs('/', 'thingCtrl.create')\r\n        ).to.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('PUT /api/things/:id', function() {\r\n\r\n    it('should route to thing.controller.update', function() {\r\n      expect(routerStub.put\r\n        .withArgs('/:id', 'thingCtrl.update')\r\n        ).to.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('PATCH /api/things/:id', function() {\r\n\r\n    it('should route to thing.controller.update', function() {\r\n      expect(routerStub.patch\r\n        .withArgs('/:id', 'thingCtrl.update')\r\n        ).to.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('DELETE /api/things/:id', function() {\r\n\r\n    it('should route to thing.controller.destroy', function() {\r\n      expect(routerStub.delete\r\n        .withArgs('/:id', 'thingCtrl.destroy')\r\n        ).to.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n});\r\n"]}